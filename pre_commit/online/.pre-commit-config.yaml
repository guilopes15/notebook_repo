repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0  # Sempre verifique a versão mais recente
    hooks:
      - id: trailing-whitespace  # Remove espaços em branco no final das linhas
      - id: end-of-file-fixer  # Garante que o arquivo termina com uma linha em branco
      - id: check-yaml  # Valida a sintaxe YAML
      - id: check-json  # Valida a sintaxe JSON
      - id: check-merge-conflict  # Impede commits com conflitos de merge não resolvidos

  - repo: https://github.com/psf/black
    rev: 24.3.0  # Versão do Black
    hooks:
      - id: black  # Formata o código Python automaticamente

  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8  # Análise de qualidade de código Python

  - repo: https://github.com/PyCQA/flake8 # McCabe
    rev: 6.0.0
    hooks:
      - id: flake8 # Identifica complexidade cliclomatica
        args: ["--max-complexity=10"]
  
  - repo: https://github.com/pycqa/ruff-pre-commit
    rev: v0.3.5
    hooks:
      - id: ruff  # Análise de código mais rápida e poderosa

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy  # Checagem de tipos para Python

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files  # Impede commits de arquivos grandes (>5MB)

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.16.0
    hooks:
      - id: commitizen  # Garante que mensagens de commit sigam um padrão

  - repo: https://github.com/pyupio/safety
    rev: 2.3.5
    hooks:
      - id: safety # Verifica se tem vulnerabilidade nas dependencias
        args: [--output=full]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-r", "."]

default_language_version:
  python: python3.12  # Define a versão padrão do Python

minimum_pre_commit_version: "2.21.0"  # Define a versão mínima do pre-commit
